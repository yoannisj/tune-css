// ============================================================================
// Tune-css Typography Helpers
// ============================================================================

@import "aleksi/lists/walk";
@import "aleksi/sides/side-value";
@import "aleksi/sides/sides-shorthand";
@import "aleksi/sides/output-sides";
@import "tune/helpers/setting";
@import "tune/helpers/length";
@import "tune/partials/vertical-rhythm";

/// tune-margin( $margin[, $unit, $args... ])
/// ---------------------------------------------------------------------------

@mixin tune-margin($margin, $unit: 'rem', $args...)
{
  // convert margin lengths to correct unit
  $lengths: ();
  @each $side in const('CSS_LAYOUT_SIDES') {
    $m: side-value($margin, $side);
    $u: side-value($unit, $side);
    $lengths: append($lengths, tune-length($m, $u, $args...));
  }

  // use default vertical-rhyhtm-margin for vertical margins when applies
  @if tune-setting('vertical-rhythm') {
    @extend %tune-vertical-rhythm;

    // output 'margin-left' and 'margin-right' in correct unit
    margin-right: nth($lengths, 2);
    margin-left: nth($lengths, 4);
  }

  @else
  {
    // set 'top' length to 0 if using single-direction-margins
    @if tune-setting('single-direction-margins') {
      $lengths: set-nth(margin-shorthand($lengths), 1, 0);
    }

    // output margins in shortest form as possible
    @include output-sides('margin', $lengths);
  }
}

/// tune-vertical-rhythm( $margin[, $unit, $args... ])
/// ---------------------------------------------------------------------------

@mixin tune-vertical-rhythm($margin, $unit: 'rem', $args...)
{
  @if tune-setting('vertical-rhythm') {
    @extend %tune-vertical-rhythm;
  }

  @else
  {
    // allow passing the name of a setting to specify the margin value
    @if type-of($margin) == 'string' {
      $margin: tune-setting($margin);
    }

    // output 'top' and 'bottom' values
    @include tune-vertical-margin($margin, $unit, $args...);
  }
}

/// tune-vertical-margin( $margin[, $unit, $args... ])
/// ---------------------------------------------------------------------------

@mixin tune-vertical-margin( $margin, $unit: 'rem', $args... )
{
  // set top value to '0' if using single direction margins
  @if tune-setting('single-direction-margins') {
    margin-top: 0;
  } @else {
    margin-top: tune-length(side-value($margin, 'top'), $unit, $args...);
  }

  margin-bottom: tune-lengh(side-value($margin, 'bottom'), $unit, $args...);
}

/// tune-typescale( $font-size, $line-height, $args... )
/// ---------------------------------------------------------------------------

@mixin tune-typescale($font-size, $line-height: null, $args...)
{
  font-size: tune-length($font-size, 'em', $args...);

  // optionally include line-height (as unitless ratio)
  @if $line-height {
    $fs: tune-length($font-size, 'px', $args...);
    line-height: tune-length($line-height, 'px', $fs) / $fs;
  }
}

/// tune-monospace-family( $family )
/// ---------------------------------------------------------------------------
/// appends 'monospace' to the given monospace font-family to avoid font
/// resizing by all major browsers.
// @link http://code.stephenmorley.org/html-and-css/fixing-browsers-broken-monospace-font-handling/

@function tune-monospace-family( $family )
{
  // repeat default 'monospace' family
  @if $family == monospace {
    @return (monospace, monospace);
  }

  // make sure the last item in the font family is 'monospace'
  @if index($family, monospace) != length($family) {
    @return append($family, monospace);
  }

  @return $family;
}

/// tune-monospace-family( $family )
/// ---------------------------------------------------------------------------
/// Includes monospace font-family. Adds 'monospace' to the given font-family
/// to avoid font resizing by all major browsers.
// @link http://code.stephenmorley.org/html-and-css/fixing-browsers-broken-monospace-font-handling/

@mixin tune-monospace-family( $family )
{
  font-face: tune-monospace-family($family);
}

/// tune-text-decoration( $decoration )
/// ---------------------------------------------------------------------------
/// Includes text-decoration. Includes 'text-decoration-line' fallback for
/// browsers not supporting the 'text-decoration' shorthand.
/// @link http://caniuse.com/#feat=text-decoration

@mixin tune-text-decoration( $decoration ) 
{
  // if using shorthand for browsers not supporting it
  @if tune-supports('chrome', 'edge', 'ie', 'opera', 'safari', 'firefox' 5, 'safari' 6)
    and length($decoration) >= 2
  {
    // Include first 'text-decoration-line' value as fallback
    text-decoration: nth($decoration, 1);
  }

  text-decoration: $decoration;
}

